import { ConfigService } from '../services/config.service';

/**
 * Inicializa configuraciones por defecto de la aplicaci√≥n
 */
export async function initializeDefaultConfig() {
  try {
    console.log('üìù Inicializando configuraciones por defecto...');

    // Configuraci√≥n de XP por d√≠a de meta de racha
    await ConfigService.updateConfig(
      'streak_goal_xp_per_day',
      '50',
      'number'
    );

    // === Configuraciones de Sistema de XP (Prioridad Alta) ===

    // XP base por completar un cap√≠tulo
    await ConfigService.updateConfig(
      'base_xp_per_chapter',
      '10',
      'number'
    );

    // Bonus XP por tener racha activa
    await ConfigService.updateConfig(
      'streak_active_bonus_xp',
      '5',
      'number'
    );

    // Bonus XP por lectura r√°pida
    await ConfigService.updateConfig(
      'speed_reading_bonus_xp',
      '3',
      'number'
    );

    // Umbral en segundos para considerar lectura r√°pida (5 minutos = 300 segundos)
    await ConfigService.updateConfig(
      'speed_reading_threshold_seconds',
      '300',
      'number'
    );

    // Bonus XP por racha larga
    await ConfigService.updateConfig(
      'long_streak_bonus_xp',
      '5',
      'number'
    );

    // Umbral en d√≠as para considerar racha larga (7 d√≠as)
    await ConfigService.updateConfig(
      'long_streak_threshold_days',
      '7',
      'number'
    );

    // Divisor para f√≥rmula de c√°lculo de nivel (nivel = sqrt(totalXP / divisor))
    await ConfigService.updateConfig(
      'level_formula_divisor',
      '100',
      'number'
    );

    console.log('‚úÖ Configuraciones inicializadas correctamente');
  } catch (error) {
    console.error('‚ùå Error al inicializar configuraciones:', error);
  }
}
